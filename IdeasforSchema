# Brainstorm for Analysis Schema

### TO DO: 
- domain contexts - add class and add conditional logic. What classes, attributes, and methods should be subject to domain flexibility?
- start a spreadsheet / google doc to track this?
- ontologies? - add? pull from? 
- what are essential yt methods and attributes that need to be a part of each data class?
- what of these attributes should the user not see (be set to private in pydantic)
- What of these attributes should the user see/customize?
- what of these atrributes are astro-specific? is there anything that is essential and astro-specific?

- for data ouptut - what in yt holds the data? What is data in yt? What should the schema refer to - create a mini-model to hold data output. Have user name that output, like a variable name? Have an id assigned to it?

- data ouput idea - turn data points into properties for re-use

April 30th:

- for description purposes, having 'middle' classes to group lower data classes, but how to navigate having no yt operation? 

May 26th:

- use 'middle' class to implement domain context logic?
- use 'alias generator' to connect with ontology?
- use a function to capture previous values, and set that as the default factory value to run and grab old value
